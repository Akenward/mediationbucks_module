<?php
 
/**
 * @file
 * Availability schema
 */
 
/**
 * Implements hook_schema() for availability entity type.
 */
function availability_schema() {
  module_load_include('module', 'availability', 'availability');
  $periods = availability_periods_factory();
  
  //  for availability table
  $schema['availability'] = array ( 
    'description' => 'The main store for availability data',
    'title' => 'Mediator availability records',
    'fields' => array(
      'vid' => array(
        'description' => 'Primary key for the table of availability records',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
       ),
       'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The {users}.uid of the associated user.",
      ),
      'start_date' => array(
        'description' => 'The datetime for the Monday starting the week',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    //data will be retrieved principally by week and user
	'indexes' => array(
      'uid' => array('uid'),
      'start_date' => array('start_date'),
    ),
    //  there's a link to the users table via user id
    'foreign keys' => array(
      'userid' => array(
      'table' => 'users',
      'columns' => array('uid' => 'uid'),
      ),
    ),
    // there should only be one record for any combination of user and week
    'unique keys' => array(
	  'user_date' => array('uid', 'start_date'),
	),
    
    'primary key' => array('vid'),
  );
  
  return $schema;
}

/**
 * Implements hook_install() for availability entity.
 */

function availability_install(){
  // Create the new field field_availability_week required for the availability entity  
  // using the helper function _availability_fields
  module_load_include('inc', 'availability', 'includes/fields');
  foreach (_availability_fields() as $field) {
    if (!field_info_field($field['field_name'])) {
      field_create_field($field);
	}
  }

  //Create the new instance of field_availability_week required for the availability entity   
  // using the helper function _availability_instances
  module_load_include('inc', 'availability', 'includes/instances');
  foreach (_availability_instances() as $instance) {
    if (!field_info_instance('availability', $instance['field_name'], $instance['bundle'])) {
      field_create_instance($instance);
	}
  }
  // Set up default values for the module configuration parameters
  $availability_settings = variable_get("availability_settings", array());
  if (empty($availability_settings)) {
    $availability_settings = array (
      'availability_start_limit' => '3',
      'availability_end_limit' => '17',
      'availability_default_week' => '3',
      'availability_delete_week' => '10',
      'availability_end_morning' => '12:00',
      'availability_end_afternoon' => '18:00',
      'availability_travelling_time' => '90 minutes',
      'availability_prompt_day' => 'friday',
      'availability_exit_protection' => 1,
      'availability_weekly_reminder' => 0,
      'availability_email_subject' => 'Availability w/c [week-commencing]',
      'availability_email_body' => 'Dear mediator, Please update your availability via the on-line system or by email for the week commencing [week_commencing]. If you are sending an email, it would be helpful if you can split your response into morning, afternoon and evening sessions eg. mon am, wed pm, fri eve. If you are unsure of your availability for that week, the on-line system allows you to set a period as "maybe" and to add a note. If you are sending an email, you could include a request to "check with me". Rest assured, we will always check that you are still available before allocating a case to you. Follow this link to the on-line availability system [site_link]. Many thanks for all your help, Henza & Sharon',
      'availability_last_email' => NULL,
    );
	variable_set("availability_settings", $availability_settings);
  }
}

function availability_uninstall(){
  // Delete the new instances added to the availability entity  
  // using the helper function _availability_instances
  module_load_include('inc', 'availability', 'includes/instances');
  foreach (_availability_instances() as $instance) {
    if (field_info_instance('availability', $instance['field_name'], $instance['bundle'])) {
      field_delete_instance($instance);
	}
  }
  
  // Delete the new fields added to the availability entity   
  // using the helper function _availability_fields
  module_load_include('inc', 'availability', 'includes/fields');
  foreach (_availability_fields() as $field) {
    if (field_info_field($field['field_name'])) {
      field_delete_field($field['field_name']);
	}
  }
  // Unset the module configuration parameters
  variable_del($availability_settings);
}	

